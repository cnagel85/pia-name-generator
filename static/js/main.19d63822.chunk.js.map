{"version":3,"sources":["constants.js","slugs.js","App.js","reportWebVitals.js","index.js"],"names":["adjectives","nouns","seedrandom","require","generateSlug","args","s","map","arg","i","console","log","toString","toLowerCase","join","btoa","toIntInRange","r","min","max","Math","ceil","floor","getNameFromSlug","slug","f","getFamousName","undefined","rng","length","famous","App","className","exact","path","component","Create","Name","useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","target","NameForm","history","useHistory","name","bindName","birthMonth","bindBirthMonth","city","bindCity","onSubmit","evt","preventDefault","push","type","useParams","atob","split","decodeSlug","Dub","w","toUpperCase","substr","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19d63822.chunk.js","sourcesContent":["\nexport const adjectives = [\n    \"Law\",\n    \"Righteous\",\n    \"Trial\",\n    \"Iron\",\n    \"Courtroom\",\n    \"Justice\",\n    \"Mighty\",\n    \"Litigant's\",\n    \"Steel\",\n    \"Plaintiff's\",\n    \"Damages\",\n    \"Lawful\",\n    \"Money\",\n    \"Cash\",\n    \"Honest\",\n    \"Legal\",\n    \"Combative\",\n    \"Strong\",\n    \"Zealous\",\n    \"Rabid\",\n    \"Courthouse\",\n    \"Judgement\",\n    \"Tribunal\",\n    \"Court\",\n    \"Tribunal\",\n    \"Judgment\",\n    \"Settlement\",\n    \"Payout\",\n]\n\nexport const nouns = [\n    \"Hammer\",\n    \"Cobra\",\n    \"Tiger\",\n    \"Eagle\",\n    \"Cowboy\",\n    \"Arm\",\n    \"Knight\",\n    \"Armadillo\",\n    \"Grizzly\",\n    \"Advocate\",\n    \"Rattlesnake\",\n    \"Locomotive\",\n    \"Lion\",\n    \"Croc\",\n    \"Badger\",\n    \"Hornet\",\n    \"Bulldog\",\n    \"Shark\",\n    \"Fist\",\n    \"Champ\",\n    \"Conqueror\",\n    \"Viking\",\n    \"Hero\",\n    \"Blade\",\n    \"Lord\",\n    \"Advocate\",\n    \"Panther\",\n]\n\n","import { adjectives, nouns } from './constants.js'\nvar seedrandom = require('seedrandom');\n\nexport const generateSlug = (...args) => {\n    let s = args.map(function(arg, i) {\n      console.log(\"arg \"+i+\": \", arg)\n      return arg.toString().toLowerCase();\n    }).join('&')\n    return btoa(s);\n  }\n\nfunction toIntInRange(r, min, max) {\n    console.log(\"rng: \", r);\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(r * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nexport const getNameFromSlug = (slug) => {\n    let f = getFamousName(slug)\n    if (f !== undefined) {\n      return f\n    }\n  \n    let rng = seedrandom(slug);\n    let adj = adjectives[toIntInRange(rng(), 1, adjectives.length)]\n    let noun = nouns[toIntInRange(rng(), 1, nouns.length)]\n    return adj + \" \" + noun\n  }\n  \n  export const decodeSlug = (slug) => {\n    return atob(slug).split(\"&\");\n  }\n\n\nconst famous = () => {\n    let f = {}\n\n    // LegalEagle Youtuber\n    f[generateSlug(\"Devin\", 12, \"Washington D.C.\")] = \"Legal Eagle\" \n    // Frank Azar\n    f[generateSlug(\"Frank\", 4, \"Denver\")] = \"Strong Arm\" \n\n    return f\n}\n\nconst getFamousName = (slug) => {\n    return famous()[slug]\n}\n","import { useState } from \"react\";\nimport { Switch, Route, Link, useParams, useHistory } from \"react-router-dom\";\n\nimport './App.css';\nimport { generateSlug, decodeSlug, getNameFromSlug } from './slugs.js'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Personal Injury Attorney Generator</h1>\n      </header>\n      <Switch>\n        <Route exact path=\"/\" component={Create} />\n        <Route path=\"/:slug\" component={Name} />\n      </Switch>\n    </div>\n  );\n}\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};\n\n\nfunction NameForm() {\n  let history = useHistory();\n  const { value:name, bind:bindName } = useInput('');\n  const { value:birthMonth, bind:bindBirthMonth } = useInput('');\n  const { value:city, bind:bindCity } = useInput('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    history.push(\"/\" + generateSlug(name, birthMonth, city));\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        First name:\n        <input type=\"text\" {...bindName}/>\n      </label>\n      <br/>\n      <label>\n        Birth month: <input type=\"number\" min=\"1\" max=\"12\" {...bindBirthMonth}/>\n      </label>\n      <br/>\n      <label>\n        City:\n        <input type=\"text\" {...bindCity}/>\n      </label>\n      <br/>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nexport function Create() {\n  return (\n      <div className=\"container\">\n          <h2>Every Personal Injury Attorney needs a memorable name!</h2>\n          <p>Let's get started. First we will need some info.</p>\n          <NameForm />\n      </div>\n  )\n}\n\nexport const mapArgs = (args) => {\n  let res = {\n    \"name\": args[0],\n    \"birthMonth\": args[1],\n    \"city\": args[2],\n  }\n  return res\n}\n\nexport function Name() {\n  const { slug } = useParams()\n  const { name, birthMonth, city } = mapArgs(decodeSlug(slug))\n\n  const capitalize = (s) => {\n      return s.split(' ').map(function(w) {\n          return w[0].toUpperCase() + w.substr(1);\n      }).join(' ')\n  }\n\n  const Dub = ({name}) => {\n      return (\n        <h2>I dub thee 'The {capitalize(name)}'</h2>\n      )\n    }\n  \n  return (\n      <div className=\"container\">\n          <Dub name={getNameFromSlug(slug)} />\n          <Link to=\"/\" >Generate Another</Link>\n          <p>{name} {birthMonth} {city}</p>\n      </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}