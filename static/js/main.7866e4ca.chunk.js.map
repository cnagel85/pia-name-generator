{"version":3,"sources":["scales.svg","constants.js","slugs.js","App.js","reportWebVitals.js","index.js"],"names":["adjectives","nouns","monthsOptions","label","value","seedrandom","require","generateSlug","args","s","map","arg","i","console","log","toString","toLowerCase","join","btoa","toIntInRange","r","min","max","Math","ceil","floor","getNameFromSlug","slug","f","getFamousName","undefined","rng","length","famous","App","className","src","Logo","alt","height","exact","path","component","Create","Name","useInput","initialValue","useState","setValue","reset","bind","onChange","event","target","NameForm","history","useHistory","name","bindName","defaultValue","useSelectInput","birthMonth","bindBirthMonth","city","bindCity","onSubmit","evt","preventDefault","push","type","style","display","width","border","borderRadius","marginLeft","options","useParams","atob","split","decodeSlug","capitalize","w","toUpperCase","substr","Dub","dub","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7866e4ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/scales.4634e0b1.svg\";","\nexport const adjectives = [\n    \"Law\",\n    \"Righteous\",\n    \"Trial\",\n    \"Iron\",\n    \"Courtroom\",\n    \"Justice\",\n    \"Mighty\",\n    \"Litigant's\",\n    \"Steel\",\n    \"Plaintiff's\",\n    \"Damages\",\n    \"Lawful\",\n    \"Money\",\n    \"Cash\",\n    \"Honest\",\n    \"Legal\",\n    \"Combative\",\n    \"Strong\",\n    \"Zealous\",\n    \"Rabid\",\n    \"Courthouse\",\n    \"Judgement\",\n    \"Tribunal\",\n    \"Court\",\n    \"Tribunal\",\n    \"Judgment\",\n    \"Settlement\",\n    \"Payout\",\n]\n\nexport const nouns = [\n    \"Hammer\",\n    \"Cobra\",\n    \"Tiger\",\n    \"Eagle\",\n    \"Cowboy\",\n    \"Arm\",\n    \"Knight\",\n    \"Armadillo\",\n    \"Grizzly\",\n    \"Advocate\",\n    \"Rattlesnake\",\n    \"Locomotive\",\n    \"Lion\",\n    \"Croc\",\n    \"Badger\",\n    \"Hornet\",\n    \"Bulldog\",\n    \"Shark\",\n    \"Fist\",\n    \"Champ\",\n    \"Conqueror\",\n    \"Viking\",\n    \"Hero\",\n    \"Blade\",\n    \"Lord\",\n    \"Advocate\",\n    \"Panther\",\n]\n\nexport const monthsOptions = [\n    { label: \"January\", value: 1},\n    { label: \"February\", value: 2},\n    { label: \"March\", value: 3},\n    { label: \"April\", value: 4},\n    { label: \"May\", value: 5},\n    { label: \"June\", value: 6},\n    { label: \"July\", value: 7},\n    { label: \"August\", value: 8},\n    { label: \"September\", value: 9},\n    { label: \"October\", value: 10},\n    { label: \"November\", value: 11},\n    { label: \"December\", value: 12},\n]","import { adjectives, nouns } from './constants.js'\nvar seedrandom = require('seedrandom');\n\nexport const generateSlug = (...args) => {\n    let s = args.map(function(arg, i) {\n      console.log(\"arg \"+i+\": \", arg)\n      return arg.toString().toLowerCase();\n    }).join('&')\n    return btoa(s);\n  }\n\nfunction toIntInRange(r, min, max) {\n    console.log(\"rng: \", r);\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(r * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nexport const getNameFromSlug = (slug) => {\n    let f = getFamousName(slug)\n    if (f !== undefined) {\n      return f\n    }\n  \n    let rng = seedrandom(slug);\n    let adj = adjectives[toIntInRange(rng(), 1, adjectives.length)]\n    let noun = nouns[toIntInRange(rng(), 1, nouns.length)]\n    return adj + \" \" + noun\n  }\n  \n  export const decodeSlug = (slug) => {\n    return atob(slug).split(\"&\");\n  }\n\n\nconst famous = () => {\n    let f = {}\n\n    // LegalEagle Youtuber\n    f[generateSlug(\"Devin\", 12, \"Washington D.C.\")] = \"Legal Eagle\" \n    // Frank Azar\n    f[generateSlug(\"Frank\", 4, \"Denver\")] = \"Strong Arm\" \n\n    return f\n}\n\nconst getFamousName = (slug) => {\n    return famous()[slug]\n}\n","import { useState } from \"react\";\nimport { Switch, Route, Link, useParams, useHistory } from \"react-router-dom\";\nimport Dropdown from 'react-dropdown';\n\nimport './App.css';\nimport Logo from './scales.svg';\nimport { generateSlug, decodeSlug, getNameFromSlug } from './slugs.js'\nimport { monthsOptions } from './constants.js'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={Logo} alt=\"Logo\" height=\"128\"/>\n        <h1>Personal Injury Attorney Generator</h1>\n      </header>\n      <Switch>\n        <Route exact path=\"/\" component={Create} />\n        <Route path=\"/:slug\" component={Name} />\n      </Switch>\n    </div>\n  );\n}\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};\n\nexport const useSelectInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      defaultValue: {value},\n      onChange: event => {\n        console.log(event)\n        setValue(event.value);\n      }\n    }\n  };\n};\n\nfunction NameForm() {\n  let history = useHistory();\n  const { value:name, bind:bindName } = useInput('');\n  const { value:birthMonth, bind:bindBirthMonth } = useSelectInput('');\n  const { value:city, bind:bindCity } = useInput('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    history.push(generateSlug(name, birthMonth, city));\n  }\n\n  const birthMonthSelectStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.isSelected ? 'red' : 'blue',\n      padding: 20,\n    }),\n    control: () => ({\n      // none of react-select's styles are passed to <Control />\n      width: 200,\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        First name:\n        <input type=\"text\" {...bindName}/>\n      </label>\n      <br/>\n      <label>\n        Birth month: \n        <span style={{display:\"inline-block\",width:\"10rem\", border:\"1px solid rgb(118, 118, 118)\", borderRadius:\"3px\", marginLeft:\".5rem\"}}>\n          <Dropdown options={monthsOptions} {...bindBirthMonth} />\n        </span>\n      </label>\n      <br/>\n      <label>\n        City:\n        <input type=\"text\" {...bindCity}/>\n      </label>\n      <br/>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nexport function Create() {\n  return (\n      <div className=\"container\">\n          <h2>Every Personal Injury Attorney needs a memorable name!</h2>\n          <p>Let's get started. First we will need some info.</p>\n          <NameForm />\n      </div>\n  )\n}\n\nexport const mapArgs = (args) => {\n  let res = {\n    \"name\": args[0],\n    \"birthMonth\": args[1],\n    \"city\": args[2],\n  }\n  return res\n}\n\nexport function Name() {\n  const { slug } = useParams()\n  const { name, birthMonth, city } = mapArgs(decodeSlug(slug))\n\n  const capitalize = (s) => {\n      return s.split(' ').map(function(w) {\n          return w[0].toUpperCase() + w.substr(1);\n      }).join(' ')\n  }\n\n  const Dub = ({dub, name}) => {\n      return (\n        <div>\n          <p>The verdict is in, {capitalize(name)}! You are</p>\n          <h2>The {capitalize(dub)}</h2>\n        </div>\n      )\n    }\n  \n  return (\n      <div className=\"container\">\n          <Dub dub={getNameFromSlug(slug)} name={name} />\n          <Link to=\"/\" >Generate Another</Link>\n      </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router basename=\"/\">\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}